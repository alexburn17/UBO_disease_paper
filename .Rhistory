cleanDS_22 <- dplyr::select(cleanDS_22, year, beekeeper, sampling_event, lab_ID, assay_score, sampling_date, varroa_count,
nosema_count, FKB_percentile, UBO_test_date, testMonth)
# select ubo testing periods
x <- cleanDS_22[cleanDS_22$assay_score >= 0,]
uboMap <- select(x, lab_ID, assay_score)[complete.cases(select(x, lab_ID, assay_score)),]
cleanDS_22$assay_score <- NULL # delete assay score
cleanDS_22 <- merge(x = cleanDS_22, y = uboMap, by = "lab_ID", all.x=T) # merge UBO scores
# add month
cleanDS_22$monthNum <- substr(cleanDS_22$sampling_date, 1, 1)
cleanDS_22$Month <- ifelse(cleanDS_22$monthNum == 5, "May",
ifelse(cleanDS_22$monthNum == 6, "June",
ifelse(cleanDS_22$monthNum == 7, "July",
ifelse(cleanDS_22$monthNum == 8, "August",
ifelse(cleanDS_22$monthNum == 9, "Sept.", NA)))))
# add binary variable
cleanDS_22$UBO_binary <- ifelse(cleanDS_22$assay_score >= 0.6, 1, 0) #"hygienic", "nonhygienic")
cleanDS_22$Nosema_binary <- ifelse(cleanDS_22$nosema_count > 0, 1, 0)
cleanDS_22$Varroa_binary <- ifelse(cleanDS_22$varroa_count > 0, 1, 0)
# create anonymous beekeeper names
cleanDS_22$anonBeek <- ifelse(cleanDS_22$beekeeper == "Andrew Munkres", "beekeeper 1",
ifelse(cleanDS_22$beekeeper == "Mike Palmer", "beekeeper 2",
ifelse(cleanDS_22$beekeeper == "Jack Rath", "beekeeper 3", NA
)))
# nosema summary
nosePrevSum <- cleanDS_22 %>% # operate on the dataframe (ds_2021) and assign to new object (pltN)
group_by(Month, UBO_binary) %>% # pick variables to group by
summarise(
mean = mean(Nosema_binary, na.rm=T), # mean
n = length(Nosema_binary),
a = sum(Nosema_binary, na.rm = T)+1,
b = n - a + 1,
lower = qbeta(.025, shape1 = a, shape2 = b),
upper = qbeta(.975, shape1 = a, shape2 = b),
)
nosePrevSum <- nosePrevSum[complete.cases(nosePrevSum),]
nosemaLoad_Sum <- cleanDS_22 %>% # operate on the dataframe (ds_2021) and assign to new object (pltN)
group_by(Month, UBO_binary) %>% # pick variables to group by
summarise(
mean = mean(((nosema_count*4000000)/80), na.rm=T), # mean\
n = length(((nosema_count*4000000)/80)),
sd = sd(((nosema_count*4000000)/80), na.rm = TRUE),
se = sd / sqrt(n)
)
nosemaLoad_Sum <- nosemaLoad_Sum[complete.cases(nosemaLoad_Sum),]
# add factor data and make ubo a char
nosePrevSum <- nosePrevSum[!is.na(nosePrevSum$UBO_binary),]
nosePrevSum$Month <- factor(nosePrevSum$Month, levels = c("June", "July", "August", "Sept."))
nosePrevSum$UBO_Char <- ifelse(nosePrevSum$UBO_binary==1, "UBO High", "UBO Low")
# plot prevalence
nosPrev <- ggplot(nosePrevSum, aes(x=Month, y=mean, group=UBO_Char)) +
geom_point(aes(color=UBO_Char), size=5)+
geom_line(aes(color=UBO_Char), size=1.5) +
theme_classic(base_size = 20) +
theme(legend.position = c(.7,.95)) +
coord_cartesian(ylim = c(0, 1)) +
geom_errorbar(aes(ymin = lower, ymax = upper, width = 0.1, color=UBO_Char))+
labs(x="Sampling Month", y="Nosema Prevalence", color=" ") +
scale_color_manual(values = c("tomato3", "darkturquoise")) +
scale_y_continuous(labels = scales::percent)
# add factor data and make ubo a char
nosemaLoad_Sum <- nosemaLoad_Sum[!is.na(nosemaLoad_Sum$UBO_binary),]
nosemaLoad_Sum$Month <- factor(nosemaLoad_Sum$Month, levels = c("June", "July", "August", "Sept."))
nosemaLoad_Sum$UBO_Char <- ifelse(nosemaLoad_Sum$UBO_binary==1, "UBO High", "UBO Low")
contNos <-ggplot(nosemaLoad_Sum, aes(x=Month, y=mean, group=UBO_Char)) +
geom_point(aes(color=UBO_Char), size=5) +
geom_line(aes(color=UBO_Char), size=1.5) +
theme_classic(base_size = 20) +
theme(legend.position = c(3,9)) +
geom_errorbar(aes(ymin = mean-se, ymax = mean+se, width = 0.1 ,color=UBO_Char))+
labs(x="Sampling Date", y="Nosema Load (spores/bee)", color=" ") +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
scale_color_manual(values = c( "tomato3", "darkturquoise"))
# make a multi panel plot
plot_grid(nosPrev, contNos,
labels = "AUTO",
label_size = 20)
mod2 <- glmer(data = cleanDS_22, Nosema_binary ~ UBO_binary * Month + (1 | lab_ID), family = binomial(link="logit"))
Anova(mod2)
mod3 <- glmer(data = cleanDS_22, (1+nosema_count) ~ UBO_binary * Month + (1 | lab_ID), family = Gamma(link=identity))
Anova(mod3)
varroaPrevSum <- cleanDS_22 %>% # operate on the dataframe (ds_2021) and assign to new object (pltN)
group_by(Month, UBO_binary) %>% # pick variables to group by
summarise(
mean = mean(Varroa_binary, na.rm=T), # mean
n = length(Varroa_binary),
a = sum(Varroa_binary, na.rm = T)+1,
b = n - a + 1,
lower = qbeta(.025, shape1 = a, shape2 = b),
upper = qbeta(.975, shape1 = a, shape2 = b),
)
varroaPrevSum <- varroaPrevSum[complete.cases(varroaPrevSum),]
# add factor data and make ubo a char
varroaPrevSum <- varroaPrevSum[!is.na(varroaPrevSum$UBO_binary),]
varroaPrevSum$Month <- factor(varroaPrevSum$Month, levels = c("June", "July", "August", "Sept."))
varroaPrevSum$UBO_Char <- ifelse(varroaPrevSum$UBO_binary==1, "UBO High", "UBO low")
# plot prevalence
varPrev <- ggplot(varroaPrevSum, aes(x=Month, y=mean, group=UBO_Char)) +
geom_point(aes(color=UBO_Char), size=5)+
geom_line(aes(color=UBO_Char), size=1.5) +
theme_classic(base_size = 20) +
theme(legend.position = c(4,5)) +
coord_cartesian(ylim = c(0, 1)) +
geom_errorbar(aes(ymin = lower, ymax = upper, width = 0.1, color=UBO_Char))+
labs(x="Sampling Month", y="Varroa Prevalence", color="") +
scale_color_manual(values = c("tomato3", "darkturquoise")) +
scale_y_continuous(labels = scales::percent)
varroaLoad_Sum <- cleanDS_22 %>% # operate on the dataframe (ds_2021) and assign to new object (pltN)
group_by(Month, UBO_binary) %>% # pick variables to group by
summarise(
mean = mean(100*(varroa_count/300), na.rm=T), # mean\
n = length(100*(varroa_count/300)),
sd = sd(100*(varroa_count/300), na.rm = TRUE),
se = sd / sqrt(n)
)
varroaLoad_Sum <- varroaLoad_Sum[complete.cases(varroaLoad_Sum),]
# add factor data and make ubo a char
varroaLoad_Sum <- varroaLoad_Sum[!is.na(varroaLoad_Sum$UBO_binary),]
varroaLoad_Sum$Month <- factor(varroaLoad_Sum$Month, levels = c("June", "July", "August", "Sept."))
varroaLoad_Sum$UBO_Char <- ifelse(varroaLoad_Sum$UBO_binary==1, "UBO High", "UBO Low")
varLoad <-ggplot(varroaLoad_Sum, aes(x=Month, y=mean, group=UBO_Char)) +
geom_point(aes(color=UBO_Char), size=5)+
geom_line(aes(color=UBO_Char), size=1.5) +
theme_classic(base_size = 20) +
theme(legend.position = c(.3,.82)) +
geom_errorbar(aes(ymin = mean-se, ymax = mean+se, width = 0.1 ,color=UBO_Char))+
labs(x="Sampling Month", y="Varroa Load (mites/100 bees)", color=" ") +
scale_color_manual(values = c("tomato3", "darkturquoise")) +
geom_hline(yintercept=c(2), linetype="dashed",
color = c("black"), size=1)
varLoad
# make a multi panel plot
plot_grid(varPrev, varLoad,
labels = "AUTO",
label_size = 20)
mod1 <- glmer(data = cleanDS_22, (varroa_count+1) ~ UBO_binary * Month + (1 | lab_ID), family = Gamma(link="identity"))
Anova(mod1)
mod2 <- glmer(data = cleanDS_22, Varroa_binary ~ UBO_binary * Month + (1 | lab_ID), family = binomial(link="logit"))
Anova(mod2)
cleanDS_22$anonBeek <- ifelse(cleanDS_22$beekeeper=="Andrew Munkres", "Beekeeper 1",
ifelse(cleanDS_22$beekeeper=="Mike Palmer", "Beekeeper 2",
ifelse(cleanDS_22$beekeeper=="Jack Rath", "Beekeeper 3", "Beekeeper 4")))
# ubo summary
uboPrevSumBeek <- cleanDS_22 %>% # operate on the dataframe (ds_2021) and assign to new object (pltN)
group_by(anonBeek) %>% # pick variables to group by
summarise(
mean = mean(UBO_binary, na.rm=T), # mean
n = length(UBO_binary),
a = sum(UBO_binary, na.rm = T)+1,
b = n - a + 1,
lower = qbeta(.025, shape1 = a, shape2 = b),
upper = qbeta(.975, shape1 = a, shape2 = b),
)
# Hygienic behavior by hive/yard, points number of hives, threshold dotted bar
ggplot(cleanDS_22, aes(x=anonBeek, y=assay_score, color=beekeeper)) +
geom_boxplot(size=1, outlier.shape = NA) +
geom_jitter(size=3) +
guides(color = guide_legend(override.aes = list(label = ''))) +
ylab("UBO Score") + # y axis label
xlab("Beekeeper") + # x axis label
theme_minimal(base_size = 17) + # size of the text and label ticks
theme(legend.position = "none") + # place the legend at the top
scale_color_manual(values = c("#3B9AB2", "#F21A00","#E1AF00")) +
geom_hline(yintercept=.6, linetype="dashed",
color = "black", size=1) +
scale_y_continuous(labels = scales::percent) +
stat_summary(fun=mean, geom="point", shape=18, size=8, color="black")
# percent UBO by breeding type
ggplot(uboPrevSumBeek, aes(x=anonBeek, y=mean, color = anonBeek)) +
geom_point(size = 10, shape = 18) +
theme_classic(base_size = 17) +
theme(legend.position = c(8,8)) +
coord_cartesian(ylim = c(0, .77)) +
geom_errorbar(aes(ymin = lower, ymax = upper, width = 0.2, color=anonBeek))+
labs(x="Beekeeper", y="Percent High UBO", color="UBO Status:") +
scale_color_manual(values = c("#3B9AB2", "#E1AF00", "#F21A00")) +
geom_hline(yintercept=thresh, linetype="dashed",
color = c("black"), size=1) +
scale_y_continuous(labels = scales::percent)
surv23 <- cleanDS[cleanDS$beekeeper=="Mike Palmer",]
surv22 <- cleanDS_22[cleanDS_22$beekeeper=="Mike Palmer",]
# add survival data to 22
surv22$survival <- surv22$lab_ID %in% surv23$lab_ID
surv22_clean <- distinct(select(surv22, UBO_binary, assay_score, survival, lab_ID))
surv22_clean$surv_BINARY <- ifelse(surv22_clean$survival==TRUE, 1, 0)
x = aov(surv22_clean$assay_score~surv22_clean$surv_BINARY)
summary(x)
mod <- glm(data = surv22_clean, surv_BINARY ~ UBO_binary, family = binomial(link="logit"))
Anova(mod)
# simplified UBO data
UBO22 <- select(cleanDS_22, lab_ID, year, beekeeper, sampling_event, sampling_date, assay_score, Month, UBO_binary, anonBeek, UBO_test_date, testMonth)
UBO23 <- select(cleanDS, lab_ID, year, beekeeper, sampling_event, sampling_date, assay_score, Month, UBO_binary, anonBeek,  UBO_test_date, testMonth)
# unique based on lab ID
UBO22_unique <- UBO22[!duplicated(UBO22[,c("lab_ID")]),]
UBO23_unique <- UBO23[!duplicated(UBO23[,c("lab_ID")]),]
# pre UBO selection data from 2023
Bianc23 <- UBO23[UBO23$beekeeper=="Bianca Braman",]
AndrewMay <- UBO23[UBO23$beekeeper=="Andrew Munkres" & UBO23$testMonth == "May",]
# append data
UBOApend <- rbind(Bianc23, AndrewMay, UBO22)
UBOApend <- UBOApend[complete.cases(UBOApend),]
# ubo summary
uboPrevSumBeek <- UBOApend %>% # operate on the dataframe (ds_2021) and assign to new object (pltN)
group_by(anonBeek) %>% # pick variables to group by
summarise(
mean = mean(UBO_binary, na.rm=T), # mean
n = length(UBO_binary),
a = sum(UBO_binary, na.rm = T)+1,
b = n - a + 1,
lower = qbeta(.025, shape1 = a, shape2 = b),
upper = qbeta(.975, shape1 = a, shape2 = b),
)
uboPrevSumBeek
# Hygienic behavior by hive/yard, points number of hives, threshold dotted bar
ggplot(UBOApend, aes(x=anonBeek, y=assay_score, color=beekeeper)) +
geom_boxplot(size=1, outlier.shape = NA) +
geom_jitter(size=3) +
guides(color = guide_legend(override.aes = list(label = ''))) +
ylab("UBO Score") + # y axis label
xlab("Beekeeper") + # x axis label
theme_minimal(base_size = 17) + # size of the text and label ticks
theme(legend.position = "none") + # place the legend at the top
scale_color_manual(values = c("#3B9AB2", "#78B7C5", "#F21A00","#E1AF00")) +
geom_hline(yintercept=.6, linetype="dashed",
color = "black", size=1) +
scale_y_continuous(labels = scales::percent) +
stat_summary(fun=mean, geom="point", shape=18, size=8, color="black")
# percent UBO by breeding type
ggplot(uboPrevSumBeek, aes(x=anonBeek, y=mean, color = anonBeek)) +
geom_point(size = 10, shape = 18) +
theme_classic(base_size = 17) +
theme(legend.position = c(8,8)) +
coord_cartesian(ylim = c(0, .77)) +
geom_errorbar(aes(ymin = lower, ymax = upper, width = 0.2, color=anonBeek))+
labs(x="Beekeeper", y="Percent High UBO", color="UBO Status:") +
scale_color_manual(values = c("#3B9AB2", "#E1AF00", "#F21A00", "#78B7C5")) +
geom_hline(yintercept=thresh, linetype="dashed",
color = c("black"), size=1) +
scale_y_continuous(labels = scales::percent)
# UBO selection data by generation and method
mikeJune23 <- UBO23[UBO23$beekeeper=="Mike Palmer" & UBO23$testMonth == "June",]
jackJune22 <- UBO22[UBO22$beekeeper=="Jack Rath" & UBO22$testMonth == "June",]
andJune22 <- UBO22[UBO22$beekeeper=="Andrew Munkres" & UBO22$testMonth == "June",]
andMay23 <- UBO23[UBO23$beekeeper=="Andrew Munkres" & UBO23$testMonth == "May",]
biancMay23 <- UBO23[UBO23$beekeeper=="Bianca Braman" & UBO23$testMonth == "May",]
# UBO gens
mikeJune23$F0 <- "F0 A"
jackJune22$F0 <- "F0 B"
andJune22$F0 <- "F0 C"
andMay23$F0 <- "F0 D"
biancMay23$F0 <- "F0 E"
# append
UBO_appendGens <- dplyr::bind_rows(mikeJune23, jackJune22, andJune22, andMay23, biancMay23)
UBO_appendGens <- UBO_appendGens[!is.na(UBO_appendGens$lab_ID),]
# ubo summary
uboPrevSumGen <- UBO_appendGens %>% # operate on the dataframe (ds_2021) and assign to new object (pltN)
group_by(F0) %>% # pick variables to group by
summarise(
mean = mean(UBO_binary, na.rm=T), # mean
n = length(UBO_binary),
a = sum(UBO_binary, na.rm = T)+1,
b = n - a + 1,
lower = qbeta(.025, shape1 = a, shape2 = b),
upper = qbeta(.975, shape1 = a, shape2 = b),
)
groupAvg <- mean(UBO_appendGens$UBO_binary, na.rm=T)
# percent UBO by breeding type
ggplot(uboPrevSumGen, aes(x=F0, y=mean, color = F0)) +
geom_point(size = 10, shape = 18) +
theme_classic(base_size = 17) +
theme(legend.position = c(8,8)) +
coord_cartesian(ylim = c(0, .77)) +
geom_errorbar(aes(ymin = lower, ymax = upper, width = 0.2, color=F0))+
labs(x=" ", y="Percent High UBO", color="UBO Status:") +
scale_color_manual(values = c("#3B9AB2", "#E1AF00", "#F21A00", "#78B7C5", "darkgreen")) +
geom_hline(yintercept=groupAvg, linetype="dashed",
color = c("black"), size=1) +
scale_y_continuous(labels = scales::percent)
UBO_appendGens
# Hygienic behavior by hive/yard, points number of hives, threshold dotted bar
ggplot(UBO_appendGens, aes(x=F0, y=assay_score, color=F0)) +
geom_boxplot(size=1, outlier.shape = NA) +
geom_jitter(size=3) +
guides(color = guide_legend(override.aes = list(label = ''))) +
ylab("UBO Score") + # y axis label
xlab(" ") + # x axis label
theme_minimal(base_size = 17) + # size of the text and label ticks
theme(legend.position = "none") + # place the legend at the top
scale_color_manual(values = c("#3B9AB2" ,"#E1AF00", "#F21A00", "#78B7C5", "darkgreen")) +
geom_hline(yintercept=.6, linetype="dashed",
color = "black", size=1) +
scale_y_continuous(labels = scales::percent) +
stat_summary(fun=mean, geom="point", shape=18, size=8, color="black")
full <- dplyr::bind_rows(cleanDS, cleanDS_22, herit)
# ubo summary
output <- full %>% # operate on the dataframe (ds_2021) and assign to new object (pltN)
group_by(Month, yard, year) %>% # pick variables to group by
summarise(
mean = mean(UBO_binary, na.rm=T), # mean
n = length(UBO_binary),
a = sum(UBO_binary, na.rm = T)+1,
b = n - a + 1,
lower = qbeta(.025, shape1 = a, shape2 = b),
upper = qbeta(.975, shape1 = a, shape2 = b),
)
View(output)
output[complete.cases(output),]
# ubo summary
output <- full %>% # operate on the dataframe (ds_2021) and assign to new object (pltN)
group_by(Month, yard, year) %>% # pick variables to group by
summarise(
uboScore = mean(assay_score),
ubo = mean(UBO_binary),
mean = mean(UBO_binary, na.rm=T), # mean
n = length(UBO_binary),
a = sum(UBO_binary, na.rm = T)+1,
b = n - a + 1,
lower = qbeta(.025, shape1 = a, shape2 = b),
upper = qbeta(.975, shape1 = a, shape2 = b),
)
output[complete.cases(output),]
# ubo summary
output <- full %>% # operate on the dataframe (ds_2021) and assign to new object (pltN)
group_by(Month, yard, year) %>% # pick variables to group by
summarise(
uboScore = mean(assay_score),
ubo = mean(UBO_binary),
mean = mean(UBO_binary, na.rm=T), # mean
n = length(UBO_binary),
a = sum(UBO_binary, na.rm = T)+1,
b = n - a + 1,
lower = qbeta(.025, shape1 = a, shape2 = b),
upper = qbeta(.975, shape1 = a, shape2 = b),
)
output
View(output)
# ubo summary
output <- full %>% # operate on the dataframe (ds_2021) and assign to new object (pltN)
group_by(Month, yard, year) %>% # pick variables to group by
summarise(
varroaLoad = mean(varroa_count, na.rm=T),
varroaPrev = mean(varroa_binary, na.rm=T),
nosemaLoad = mean(nosema_count, na.rm=T),
nosemaPrev = mean(Nosema_binary, na.rm=T),
uboScore = mean(assay_score, na.rm=T),
ubo = mean(UBO_binary, na.rm=T), # mean
n = length(UBO_binary),
a = sum(UBO_binary, na.rm = T)+1,
b = n - a + 1,
lower = qbeta(.025, shape1 = a, shape2 = b),
upper = qbeta(.975, shape1 = a, shape2 = b),
)
# ubo summary
output <- full %>% # operate on the dataframe (ds_2021) and assign to new object (pltN)
group_by(Month, yard, year) %>% # pick variables to group by
summarise(
varroaLoad = mean(varroa_count, na.rm=T),
varroaPrev = mean(Varroa_binary, na.rm=T),
nosemaLoad = mean(nosema_count, na.rm=T),
nosemaPrev = mean(Nosema_binary, na.rm=T),
uboScore = mean(assay_score, na.rm=T),
ubo = mean(UBO_binary, na.rm=T), # mean
n = length(UBO_binary),
a = sum(UBO_binary, na.rm = T)+1,
b = n - a + 1,
lower = qbeta(.025, shape1 = a, shape2 = b),
upper = qbeta(.975, shape1 = a, shape2 = b),
)
View(output)
plot(output$varroaLoad, output$uboScore)
plot(output$uboScore, output$varroaLoad)
plot(output$ubo, output$varroaLoad)
plot(output$ubo, output$nosemaLoad)
plot(output$ubo, output$nosemaPrev)
plot(output$ubo, output$varroaPrev)
plot(output$uboScore, output$varroaPrev)
# install libraries
library(dplyr)
library(ggplot2)
library(lme4)
library(tidyr)
library(viridis)
library(car)
library(imputeTS)
library(cowplot)
library(scales)
library(ggmosaic)
library(wesanderson)
# set directory:
setwd("~/Documents/GitHub/UBO_disease_paper")
# read in data
ds <- read.csv("data/Chalkbrood_Aus.csv", header = TRUE, stringsAsFactors = FALSE)
ds23 <- read.csv("data/UBO_Data_2023.csv", header = TRUE, stringsAsFactors = FALSE)
# 2022 data
cleanDS_22 <- ds23[ds23$year == 2022,]
# select relavant variables
ds <- select(ds, Test_No, Total_Brood, Brood_with_Chalk, White_Chalk, Spore_Dark_Chalk, Empty_Cells, Total_Cells, Cleared_Cells)
ds$Percentage_UBO <- ((ds$Cleared_Cells - ds$Empty_Cells) / ds$Total_Cells) * 100
# calculate percent chalkbrood
ds$percent_chalk <- ds$Brood_with_Chalk/ds$Total_Brood
# ubo binary
ds$UBO_binary <- ifelse(ds$Percentage_UBO < 20, "low UBO", "high UBO")
# make long form
ds_long <- gather(ds, chalk_type, chalkbrood, White_Chalk:Spore_Dark_Chalk, factor_key=TRUE)
# rename chalk type
ds_long$chalk_type <- ifelse(ds_long$chalk_type == "White_Chalk", "White Chalk", "Black Chalk Spores")
# make chalkbrood binary
ds_long$chalk_binary <- ifelse(ds_long$chalkbrood > 0, 1, 0)
# short data
ds_short <- ds_long[ds_long$chalk_type == "White Chalk",]
# total chalk
ds$TotalChalk = ds$White_Chalk + ds$Spore_Dark_Chalk
# ubo and chalk binary
UBO_chalk_binary <- ds_long %>% # operate on the dataframe (ds_2021) and assign to new object (pltN)
group_by(chalk_type, UBO_binary) %>% # pick variables to group by
summarise(
mean = mean(chalk_binary, na.rm=T), # mean
n = length(chalk_binary),
a = sum(chalk_binary, na.rm = T)+1,
b = n - a + 1,
lower = qbeta(.025, shape1 = a, shape2 = b),
upper = qbeta(.975, shape1 = a, shape2 = b),
)
# ubo and chalk CONTINUOUS
UBO_chalk_brood <- ds_long %>% # operate on the dataframe (ds_2021) and assign to new object (pltN)
group_by(chalk_type, UBO_binary) %>% # pick variables to group by
summarise(
mean = mean(chalkbrood, na.rm=T), # mean
n = length(chalkbrood),
)
# model for binary chalk by ubo score
mod <- glm(data = ds_long, chalk_binary ~ Percentage_UBO * chalk_type, binomial(link = "logit"))
Anova(mod)
# plot chalk brood binary
ggplot(ds_long, aes(x=Percentage_UBO, y=chalk_binary, color=as.character(chalk_type))) +
#geom_point(size=0) +
geom_smooth(method="glm", se=FALSE, fullrange=TRUE, size = 1, method.args = list(family=binomial)) +
geom_point(size=2.3) +
ylab("Chalkbrood Binary") + # y axis label
xlab("Percent UBO Response") + # x axis label
theme_minimal(base_size = 17) + # size of the text and label ticks
theme(legend.position = c(.76, .9)) +
scale_color_manual(values = c("darkturquoise", "tomato3"), name=" ")  # color pallets option = A-H
# plot chalk brood
ggplot(ds_short, aes(x=Percentage_UBO, y=percent_chalk)) +
#geom_point(size=0) +
geom_smooth(method="lm", se=FALSE, fullrange=TRUE, size = 1) +
geom_point(size=2.3) +
ylab("% frames with chalkbrood") + # y axis label
xlab("Percent UBO Response") + # x axis label
theme_minimal(base_size = 17) + # size of the text and label ticks
theme(legend.position = c(.76, .9)) +
# model for percentage ubo on frames
mod <- lm(data = ds_short, percent_chalk ~ Percentage_UBO)
Anova(mod)
# original model
cor.test(x = ds_short$Percentage_UBO, y = ds_short$percent_chalk, method = 'spearman', alternative = "greater")
# CHALKBROOD CELLS BY UBO SCORE
####################################################################################################
# plot chalk brood
ggplot(ds_long, aes(x=Percentage_UBO, y=chalkbrood,
color=as.character(chalk_type))) +
#geom_point(size=0) +
geom_smooth(method="lm", se=FALSE, fullrange=TRUE, size = 1) +
geom_point(size=2.3) +
ylab("Chalkbrood (cells/frame)") + # y axis label
xlab("Percent UBO Response") + # x axis label
theme_minimal(base_size = 17) + # size of the text and label ticks
theme(legend.position = c(.76, .9)) + # place the legend at the top
scale_color_manual(values = c("darkturquoise", "tomato3"), name=" ") + # color pallets option = A-H
guides(color = guide_legend(override.aes = list(label = ''))) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x)))
# glm for chalkbrood count data by ubo score and chalk type (poisson)
mod <- glm(data = ds_long, chalkbrood ~ Percentage_UBO * chalk_type, family = poisson(link = "log"))
Anova(mod)
cor.test(x = ds$Percentage_UBO, y = ds$TotalChalk, method = 'spearman', alternative = "greater")
# CHALKBROOD type regression
####################################################################################################
plot(y = log10(ds$White_Chalk+1), x = log10(ds$Spore_Dark_Chalk + 1))
x <- lm(data = ds, log10(Spore_Dark_Chalk + 1) ~ log10(White_Chalk+1))
summary(x)
# plot chalk brood binary
ggplot(ds_long, aes(x=Percentage_UBO, y=chalk_binary, color=as.character(chalk_type))) +
#geom_point(size=0) +
geom_smooth(method="glm", se=FALSE, fullrange=TRUE, size = 1, method.args = list(family=binomial)) +
geom_point(size=2.3) +
ylab("Chalkbrood Binary") + # y axis label
xlab("Percent UBO Response") + # x axis label
theme_minimal(base_size = 17) + # size of the text and label ticks
theme(legend.position = c(.76, .9)) +
scale_color_manual(values = c("darkturquoise", "tomato3"), name=" ")  # color pallets option = A-H
# plot chalk brood
ggplot(ds_short, aes(x=Percentage_UBO, y=percent_chalk)) +
#geom_point(size=0) +
geom_smooth(method="lm", se=FALSE, fullrange=TRUE, size = 1) +
geom_point(size=2.3) +
ylab("% frames with chalkbrood") + # y axis label
xlab("Percent UBO Response") + # x axis label
theme_minimal(base_size = 17) + # size of the text and label ticks
theme(legend.position = c(.76, .9)) +
# model for percentage ubo on frames
mod <- lm(data = ds_short, percent_chalk ~ Percentage_UBO)
# plot chalk brood
ggplot(ds_short, aes(x=Percentage_UBO, y=percent_chalk)) +
#geom_point(size=0) +
geom_smooth(method="lm", se=FALSE, fullrange=TRUE, size = 1) +
geom_point(size=2.3) +
ylab("% frames with chalkbrood") + # y axis label
xlab("Percent UBO Response") + # x axis label
theme_minimal(base_size = 17) + # size of the text and label ticks
theme(legend.position = c(.76, .9))
