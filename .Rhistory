vP <- ggplot(virusPrevSum, aes(x=virus, y=mean, fill=ubo_binary_june)) +
theme_minimal(base_size = 20) +
theme(legend.position = "none") +
labs(x="Virus", y="Virus Prevalence", fill = "UBO Status:", tag = "A") +
geom_bar(stat="identity", position=position_dodge()) +
geom_errorbar(aes(ymin=lower, ymax=upper), width=.2,
position=position_dodge(.9)) +
scale_fill_manual(values = c("#5071A0", "#E77624")) +
scale_y_continuous(labels = scales::percent)+
scale_x_discrete(guide = guide_axis(angle = 45))
# extract legend
leg <- ggplot(virusPrevSum, aes(x=virus, y=mean, fill=ubo_binary_june)) +
theme_minimal(base_size = 20) +
theme(legend.position = "top") +
labs(x="Virus", y="Virus Prevalence", fill = "UBO Status:", tag = "A") +
geom_bar(stat="identity", position=position_dodge()) +
geom_errorbar(aes(ymin=lower, ymax=upper), width=.2,
position=position_dodge(.9)) +
scale_fill_manual(values = c("#5071A0", "#E77624")) +
scale_y_continuous(labels = scales::percent)+
scale_x_discrete(guide = guide_axis(angle = 45))
# grouped boxplot
vld <- ggplot(data = virus_long, aes(x = virus, y = logLoad, fill = ubo_binary_june)) +
geom_boxplot() +
theme_minimal(base_size = 20) +
theme(legend.position = "none") +
labs(x="Virus", y="Log10(load) (copies/ul)", fill = "UBO Status:", tag = "B") +
scale_fill_manual(values = c("#5071A0", "#E77624")) +
scale_x_discrete(guide = guide_axis(angle = 45))
# virus binary summary
virusPrevSum <- virus_long %>% # operate on the dataframe (ds_2021) and assign to new object (pltN)
group_by(virus, ubo_binary_august) %>% # pick variables to group by
dplyr::summarise(
mean = mean(virus_binary, na.rm=T), # mean
n = length(virus_binary),
a = sum(virus_binary, na.rm = T)+1,
b = n - a + 1,
lower = qbeta(.025, shape1 = a, shape2 = b),
upper = qbeta(.975, shape1 = a, shape2 = b),
)
virusPrevSum <- virusPrevSum[complete.cases(virusPrevSum),]
virusPrevSum[virusPrevSum$mean==0,]$lower <- NA
virusPrevSum[virusPrevSum$mean==0,]$upper <- NA
vP <- ggplot(virusPrevSum, aes(x=virus, y=mean, fill=ubo_binary_june)) +
theme_minimal(base_size = 20) +
theme(legend.position = "none") +
labs(x="Virus", y="Virus Prevalence", fill = "UBO Status:", tag = "A") +
geom_bar(stat="identity", position=position_dodge()) +
geom_errorbar(aes(ymin=lower, ymax=upper), width=.2,
position=position_dodge(.9)) +
scale_fill_manual(values = c("#5071A0", "#E77624")) +
scale_y_continuous(labels = scales::percent)+
scale_x_discrete(guide = guide_axis(angle = 45))
# extract legend
leg <- ggplot(virusPrevSum, aes(x=virus, y=mean, fill=ubo_binary_june)) +
theme_minimal(base_size = 20) +
theme(legend.position = "top") +
labs(x="Virus", y="Virus Prevalence", fill = "UBO Status:", tag = "A") +
geom_bar(stat="identity", position=position_dodge()) +
geom_errorbar(aes(ymin=lower, ymax=upper), width=.2,
position=position_dodge(.9)) +
scale_fill_manual(values = c("#5071A0", "#E77624")) +
scale_y_continuous(labels = scales::percent)+
scale_x_discrete(guide = guide_axis(angle = 45))
# make data wide
virus_wide <- select(virus_long, -virus_binary, -ubo_binary_june, -ubo_binary_august,-mite_binary_june, -virus_load)
virus_wide <- virus_wide %>% pivot_wider(names_from = virus, values_from = logLoad)
virus_wide$ubo_binary_june <- ifelse(virus_wide$June.UBO > 60, "UBO +", "UBO -")
virus_wide$ubo_binary_august <- ifelse(virus_wide$August.UBO > 60, "UBO +", "UBO -")
# get legend
grobs <- ggplotGrob(leg)$grobs
legend <- grobs[[which(sapply(grobs, function(x) x$name) == "guide-box")]]
# plot figures
plt <- grid.arrange(vP, vld, ncol=2)
plot_grid(legend, plt, nrow = 2, rel_heights = c(.1, 1))
##############################################################################
# READ DATA
virus <- read.csv("data/UBO_VirusData_2021.csv", header = TRUE, stringsAsFactors = FALSE)
virus$RPS5..Cq. <- NULL # remove un-needed col
# make long form
virus_long <- gather(virus, virus, virus_load, DWV.ACopies.µl:IAPVCopies.µl, factor_key=TRUE)
# remove "Copies.ul" from virus name
virus_long$virus <- gsub('Copies.µl', '', virus_long$virus)
# ubo scores and binary virus and mites and log load
virus_long$virus_binary <- ifelse(virus_long$virus_load > 0, 1, 0)
virus_long$ubo_binary_june <- ifelse(virus_long$June.UBO > 60, "UBO High", "UBO Low")
virus_long$ubo_binary_august <- ifelse(virus_long$August.UBO > 60, "UBO High", "UBO Low")
virus_long$mite_binary_june <-  ifelse(virus_long$June.Mite > 0, 1, 0)
virus_long$mite_binary_august <- ifelse(virus_long$August.Mite > 0, 1, 0)
virus_long$logLoad <- log10(virus_long$virus_load + 1)
virus_long <- virus_long[!is.na(virus_long$ubo_binary_august),]
# grouped boxplot
vld <- ggplot(data = virus_long, aes(x = virus, y = logLoad, fill = ubo_binary_june)) +
geom_boxplot() +
theme_minimal(base_size = 20) +
theme(legend.position = "none") +
labs(x="Virus", y="Log10(load) (copies/ul)", fill = "UBO Status:", tag = "B") +
scale_fill_manual(values = c("#5071A0", "#E77624")) +
scale_x_discrete(guide = guide_axis(angle = 45))
# virus binary summary
virusPrevSum <- virus_long %>% # operate on the dataframe (ds_2021) and assign to new object (pltN)
group_by(virus, ubo_binary_august) %>% # pick variables to group by
dplyr::summarise(
mean = mean(virus_binary, na.rm=T), # mean
n = length(virus_binary),
a = sum(virus_binary, na.rm = T)+1,
b = n - a + 1,
lower = qbeta(.025, shape1 = a, shape2 = b),
upper = qbeta(.975, shape1 = a, shape2 = b),
)
virusPrevSum <- virusPrevSum[complete.cases(virusPrevSum),]
virusPrevSum[virusPrevSum$mean==0,]$lower <- NA
virusPrevSum[virusPrevSum$mean==0,]$upper <- NA
vP <- ggplot(virusPrevSum, aes(x=virus, y=mean, fill=ubo_binary_june)) +
theme_minimal(base_size = 20) +
theme(legend.position = "none") +
labs(x="Virus", y="Virus Prevalence", fill = "UBO Status:", tag = "A") +
geom_bar(stat="identity", position=position_dodge()) +
geom_errorbar(aes(ymin=lower, ymax=upper), width=.2,
position=position_dodge(.9)) +
scale_fill_manual(values = c("#5071A0", "#E77624")) +
scale_y_continuous(labels = scales::percent)+
scale_x_discrete(guide = guide_axis(angle = 45))
# extract legend
leg <- ggplot(virusPrevSum, aes(x=virus, y=mean, fill=ubo_binary_june)) +
theme_minimal(base_size = 20) +
theme(legend.position = "top") +
labs(x="Virus", y="Virus Prevalence", fill = "UBO Status:", tag = "A") +
geom_bar(stat="identity", position=position_dodge()) +
geom_errorbar(aes(ymin=lower, ymax=upper), width=.2,
position=position_dodge(.9)) +
scale_fill_manual(values = c("#5071A0", "#E77624")) +
scale_y_continuous(labels = scales::percent)+
scale_x_discrete(guide = guide_axis(angle = 45))
# make data wide
virus_wide <- select(virus_long, -virus_binary, -ubo_binary_june, -ubo_binary_august,-mite_binary_june, -virus_load)
virus_wide <- virus_wide %>% pivot_wider(names_from = virus, values_from = logLoad)
virus_wide$ubo_binary_june <- ifelse(virus_wide$June.UBO > 60, "UBO +", "UBO -")
virus_wide$ubo_binary_august <- ifelse(virus_wide$August.UBO > 60, "UBO +", "UBO -")
# get legend
grobs <- ggplotGrob(leg)$grobs
legend <- grobs[[which(sapply(grobs, function(x) x$name) == "guide-box")]]
# plot figures
plt <- grid.arrange(vP, vld, ncol=2)
# grouped boxplot
vld <- ggplot(data = virus_long, aes(x = virus, y = logLoad, fill = ubo_binary_june)) +
geom_boxplot() +
theme_minimal(base_size = 20) +
theme(legend.position = "none") +
labs(x="Virus", y="Log10(load) (copies/ul)", fill = "UBO Status:", tag = "B") +
scale_fill_manual(values = c("#5071A0", "#E77624")) +
scale_x_discrete(guide = guide_axis(angle = 45))
# virus binary summary
virusPrevSum <- virus_long %>% # operate on the dataframe (ds_2021) and assign to new object (pltN)
group_by(virus, ubo_binary_june) %>% # pick variables to group by
dplyr::summarise(
mean = mean(virus_binary, na.rm=T), # mean
n = length(virus_binary),
a = sum(virus_binary, na.rm = T)+1,
b = n - a + 1,
lower = qbeta(.025, shape1 = a, shape2 = b),
upper = qbeta(.975, shape1 = a, shape2 = b),
)
virusPrevSum <- virusPrevSum[complete.cases(virusPrevSum),]
virusPrevSum[virusPrevSum$mean==0,]$lower <- NA
virusPrevSum[virusPrevSum$mean==0,]$upper <- NA
vP <- ggplot(virusPrevSum, aes(x=virus, y=mean, fill=ubo_binary_june)) +
theme_minimal(base_size = 20) +
theme(legend.position = "none") +
labs(x="Virus", y="Virus Prevalence", fill = "UBO Status:", tag = "A") +
geom_bar(stat="identity", position=position_dodge()) +
geom_errorbar(aes(ymin=lower, ymax=upper), width=.2,
position=position_dodge(.9)) +
scale_fill_manual(values = c("#5071A0", "#E77624")) +
scale_y_continuous(labels = scales::percent)+
scale_x_discrete(guide = guide_axis(angle = 45))
# extract legend
leg <- ggplot(virusPrevSum, aes(x=virus, y=mean, fill=ubo_binary_june)) +
theme_minimal(base_size = 20) +
theme(legend.position = "top") +
labs(x="Virus", y="Virus Prevalence", fill = "UBO Status:", tag = "A") +
geom_bar(stat="identity", position=position_dodge()) +
geom_errorbar(aes(ymin=lower, ymax=upper), width=.2,
position=position_dodge(.9)) +
scale_fill_manual(values = c("#5071A0", "#E77624")) +
scale_y_continuous(labels = scales::percent)+
scale_x_discrete(guide = guide_axis(angle = 45))
# make data wide
virus_wide <- select(virus_long, -virus_binary, -ubo_binary_june, -ubo_binary_august,-mite_binary_june, -virus_load)
virus_wide <- virus_wide %>% pivot_wider(names_from = virus, values_from = logLoad)
virus_wide$ubo_binary_june <- ifelse(virus_wide$June.UBO > 60, "UBO +", "UBO -")
virus_wide$ubo_binary_august <- ifelse(virus_wide$August.UBO > 60, "UBO +", "UBO -")
# get legend
grobs <- ggplotGrob(leg)$grobs
legend <- grobs[[which(sapply(grobs, function(x) x$name) == "guide-box")]]
# plot figures
plt <- grid.arrange(vP, vld, ncol=2)
plot_grid(legend, plt, nrow = 2, rel_heights = c(.1, 1))
virus_long
splitVirus
virus_long
glm(data = splitVirus$BQCV, virus_binary ~ June.UBO, family = binomial(link = "logit"))
mod6 <- glm(data = splitVirus$BQCV, virus_binary ~ June.UBO, family = binomial(link = "logit"))
Anova(mod6)
mod6 <- glm(data = splitVirus$BQCV, virus_binary ~ June.UBO, family = binomial(link = "logit"))
mod7 <- glm(data = splitVirus$DWV.A, virus_binary ~ June.UBO, family = binomial(link = "logit"))
mod8 <- glm(data = splitVirus$DWV.B, virus_binary ~ June.UBO, family = binomial(link = "logit"))
mod9 <- glm(data = splitVirus$IAPV, virus_binary ~ June.UBO, family = binomial(link = "logit"))
mod10 <- glm(data = splitVirus$LSV, virus_binary ~ June.UBO, family = binomial(link = "logit"))
mod11 <- glm(data = splitVirus$SBV, virus_binary ~ June.UBO, family = binomial(link = "logit"))
Anova(mod6)
Anova(mod7)
Anova(mod8)
Anova(mod9)
Anova(mod10)
Anova(mod11)
# VIRUS LOAD - UBO BINARY
mod12 <- lm(data = splitVirus$BQCV, virusLoad ~ June.UBO)
# VIRUS LOAD - UBO BINARY
mod12 <- lm(data = splitVirus$BQCV, logLoad ~ June.UBO)
# VIRUS LOAD - UBO BINARY
mod12 <- lm(data = splitVirus$BQCV, logLoad ~ June.UBO)
mod13 <- lm(data = splitVirus$DWV.A, logLoad ~ June.UBO)
mod14 <- lm(data = splitVirus$DWV.B, logLoad ~ June.UBO)
mod15 <- lm(data = splitVirus$IAPV, logLoad ~ June.UBO)
mod16 <- lm(data = splitVirus$LSV, logLoad ~ June.UBO)
mod17 <- lm(data = splitVirus$SBV, logLoad ~ June.UBO)
Anova(mod12)
Anova(mod13)
Anova(mod14)
Anova(mod15)
Anova(mod16)
Anova(mod17)
vP <- ggplot(virusPrevSum, aes(x=virus, y=mean, fill=ubo_binary_june)) +
theme_minimal(base_size = 20) +
theme(legend.position = "none") +
labs(x="Virus", y="Virus Prevalence", fill = "UBO Status:", tag = "A") +
geom_bar(stat="identity", position=position_dodge()) +
geom_errorbar(aes(ymin=lower, ymax=upper), width=.2,
position=position_dodge(.9)) +
scale_fill_manual(values = c("#5071A0", "#E77624")) +
scale_y_continuous(labels = scales::percent)+
scale_x_discrete(guide = guide_axis(angle = 45)) +
annotate("ns", x = 1, y = 1.1, label = "Some text")
vP <- ggplot(virusPrevSum, aes(x=virus, y=mean, fill=ubo_binary_june)) +
theme_minimal(base_size = 20) +
theme(legend.position = "none") +
labs(x="Virus", y="Virus Prevalence", fill = "UBO Status:", tag = "A") +
geom_bar(stat="identity", position=position_dodge()) +
geom_errorbar(aes(ymin=lower, ymax=upper), width=.2,
position=position_dodge(.9)) +
scale_fill_manual(values = c("#5071A0", "#E77624")) +
scale_y_continuous(labels = scales::percent)+
scale_x_discrete(guide = guide_axis(angle = 45)) +
annotate("text", x = 1, y = 1.1, label = "ns")
vP
vP <- ggplot(virusPrevSum, aes(x=virus, y=mean, fill=ubo_binary_june)) +
theme_minimal(base_size = 20) +
theme(legend.position = "none") +
labs(x="Virus", y="Virus Prevalence", fill = "UBO Status:", tag = "A") +
geom_bar(stat="identity", position=position_dodge()) +
geom_errorbar(aes(ymin=lower, ymax=upper), width=.2,
position=position_dodge(.9)) +
scale_fill_manual(values = c("#5071A0", "#E77624")) +
scale_y_continuous(labels = scales::percent)+
scale_x_discrete(guide = guide_axis(angle = 45)) +
annotate("text", x = 1, y = 1.05, label = "ns")
vP
vP <- ggplot(virusPrevSum, aes(x=virus, y=mean, fill=ubo_binary_june)) +
theme_minimal(base_size = 20) +
theme(legend.position = "none") +
labs(x="Virus", y="Virus Prevalence", fill = "UBO Status:", tag = "A") +
geom_bar(stat="identity", position=position_dodge()) +
geom_errorbar(aes(ymin=lower, ymax=upper), width=.2,
position=position_dodge(.9)) +
scale_fill_manual(values = c("#5071A0", "#E77624")) +
scale_y_continuous(labels = scales::percent)+
scale_x_discrete(guide = guide_axis(angle = 45)) +
annotate("text", x = c(1:6), y = c(1.05, .7,.7,.7,.7,.7), label = c("ns", "*", "*", "*", "*", "ns"))
vP
vP <- ggplot(virusPrevSum, aes(x=virus, y=mean, fill=ubo_binary_june)) +
theme_minimal(base_size = 20) +
theme(legend.position = "none") +
labs(x="Virus", y="Virus Prevalence", fill = "UBO Status:", tag = "A") +
geom_bar(stat="identity", position=position_dodge()) +
geom_errorbar(aes(ymin=lower, ymax=upper), width=.2,
position=position_dodge(.9)) +
scale_fill_manual(values = c("#5071A0", "#E77624")) +
scale_y_continuous(labels = scales::percent)+
scale_x_discrete(guide = guide_axis(angle = 45)) +
annotate("text", x = c(1:6), y = c(1.05, .8,.9,.8,1.05,1.05), label = c("ns", "*", "*", "*", "*", "ns"))
vP
vP <- ggplot(virusPrevSum, aes(x=virus, y=mean, fill=ubo_binary_june)) +
theme_minimal(base_size = 20) +
theme(legend.position = "none") +
labs(x="Virus", y="Virus Prevalence", fill = "UBO Status:", tag = "A") +
geom_bar(stat="identity", position=position_dodge()) +
geom_errorbar(aes(ymin=lower, ymax=upper), width=.2,
position=position_dodge(.9)) +
scale_fill_manual(values = c("#5071A0", "#E77624")) +
scale_y_continuous(labels = scales::percent)+
scale_x_discrete(guide = guide_axis(angle = 45)) +
annotate("text", x = c(1:6), y = c(1.05, .85,.95,.85,1.05,1.05), label = c("ns", "*", "*", "*", "*", "ns"))
vP
vP <- ggplot(virusPrevSum, aes(x=virus, y=mean, fill=ubo_binary_june)) +
theme_minimal(base_size = 20) +
theme(legend.position = "none") +
labs(x="Virus", y="Virus Prevalence", fill = "UBO Status:", tag = "A") +
geom_bar(stat="identity", position=position_dodge()) +
geom_errorbar(aes(ymin=lower, ymax=upper), width=.2,
position=position_dodge(.9)) +
scale_fill_manual(values = c("#5071A0", "#E77624")) +
scale_y_continuous(labels = scales::percent)+
scale_x_discrete(guide = guide_axis(angle = 45)) +
annotate("text", x = c(1:6), y = c(1.05, .9,.98,.88,1.05,1.05), label = c("ns", "*", "*", "*", "*", "ns"))
vP
vP <- ggplot(virusPrevSum, aes(x=virus, y=mean, fill=ubo_binary_june)) +
theme_minimal(base_size = 20) +
theme(legend.position = "none") +
labs(x="Virus", y="Virus Prevalence", fill = "UBO Status:", tag = "A") +
geom_bar(stat="identity", position=position_dodge()) +
geom_errorbar(aes(ymin=lower, ymax=upper), width=.2,
position=position_dodge(.9)) +
scale_fill_manual(values = c("#5071A0", "#E77624")) +
scale_y_continuous(labels = scales::percent)+
scale_x_discrete(guide = guide_axis(angle = 45)) +
annotate("text", x = c(1:6), y = c(1.08, .9,.98,.88,1.05,1.08), label = c("ns", "*", "*", "*", "*", "ns"))
vP
vP <- ggplot(virusPrevSum, aes(x=virus, y=mean, fill=ubo_binary_june)) +
theme_minimal(base_size = 20) +
theme(legend.position = "none") +
labs(x="Virus", y="Virus Prevalence", fill = "UBO Status:", tag = "A") +
geom_bar(stat="identity", position=position_dodge()) +
geom_errorbar(aes(ymin=lower, ymax=upper), width=.2,
position=position_dodge(.9)) +
scale_fill_manual(values = c("#5071A0", "#E77624")) +
scale_y_continuous(labels = scales::percent)+
scale_x_discrete(guide = guide_axis(angle = 45)) +
annotate("text", x = c(1:6), y = c(1.07, .9,.98,.88,1.05,1.07), label = c("ns", "*", "*", "*", "*", "ns"))
vP
vP <- ggplot(virusPrevSum, aes(x=virus, y=mean, fill=ubo_binary_june)) +
theme_minimal(base_size = 20) +
theme(legend.position = "none") +
labs(x="Virus", y="Virus Prevalence", fill = "UBO Status:", tag = "A") +
geom_bar(stat="identity", position=position_dodge()) +
geom_errorbar(aes(ymin=lower, ymax=upper), width=.2,
position=position_dodge(.9)) +
scale_fill_manual(values = c("#5071A0", "#E77624")) +
scale_y_continuous(labels = scales::percent)+
scale_x_discrete(guide = guide_axis(angle = 45)) +
annotate("text", x = c(1:6), y = c(1.06, .9,.98,.88,1.05,1.06), label = c("ns", "*", "*", "*", "*", "ns"))
vP
vP <- ggplot(virusPrevSum, aes(x=virus, y=mean, fill=ubo_binary_june)) +
theme_minimal(base_size = 20) +
theme(legend.position = "none") +
labs(x="Virus", y="Virus Prevalence", fill = "UBO Status:", tag = "A") +
geom_bar(stat="identity", position=position_dodge()) +
geom_errorbar(aes(ymin=lower, ymax=upper), width=.2,
position=position_dodge(.9)) +
scale_fill_manual(values = c("#5071A0", "#E77624")) +
scale_y_continuous(labels = scales::percent)+
scale_x_discrete(guide = guide_axis(angle = 45)) +
annotate("text", x = c(1:6), y = c(1.06, .9,.98,.88,1.05,1.06), label = c("ns", "*", "*", "*", "*", "ns"), size = 2)
vP
vP <- ggplot(virusPrevSum, aes(x=virus, y=mean, fill=ubo_binary_june)) +
theme_minimal(base_size = 20) +
theme(legend.position = "none") +
labs(x="Virus", y="Virus Prevalence", fill = "UBO Status:", tag = "A") +
geom_bar(stat="identity", position=position_dodge()) +
geom_errorbar(aes(ymin=lower, ymax=upper), width=.2,
position=position_dodge(.9)) +
scale_fill_manual(values = c("#5071A0", "#E77624")) +
scale_y_continuous(labels = scales::percent)+
scale_x_discrete(guide = guide_axis(angle = 45)) +
annotate("text", x = c(1:6), y = c(1.06, .9,.98,.88,1.05,1.06), label = c("ns", "*", "*", "*", "*", "ns"), size = 8)
vP
vP <- ggplot(virusPrevSum, aes(x=virus, y=mean, fill=ubo_binary_june)) +
theme_minimal(base_size = 20) +
theme(legend.position = "none") +
labs(x="Virus", y="Virus Prevalence", fill = "UBO Status:", tag = "A") +
geom_bar(stat="identity", position=position_dodge()) +
geom_errorbar(aes(ymin=lower, ymax=upper), width=.2,
position=position_dodge(.9)) +
scale_fill_manual(values = c("#5071A0", "#E77624")) +
scale_y_continuous(labels = scales::percent)+
scale_x_discrete(guide = guide_axis(angle = 45)) +
annotate("text", x = c(1:6), y = c(1.06, .9,.98,.88,1.05,1.06), label = c("ns", "*", "*", "*", "*", "ns"), size = 6)
vP
# VIRUS PREB - UBO BINARY
mod6 <- glm(data = splitVirus$BQCV, virus_binary ~ June.UBO, family = binomial(link = "logit"))
mod7 <- glm(data = splitVirus$DWV.A, virus_binary ~ June.UBO, family = binomial(link = "logit"))
mod8 <- glm(data = splitVirus$DWV.B, virus_binary ~ June.UBO, family = binomial(link = "logit"))
mod9 <- glm(data = splitVirus$IAPV, virus_binary ~ June.UBO, family = binomial(link = "logit"))
mod10 <- glm(data = splitVirus$LSV, virus_binary ~ June.UBO, family = binomial(link = "logit"))
mod11 <- glm(data = splitVirus$SBV, virus_binary ~ June.UBO, family = binomial(link = "logit"))
Anova(mod6)
Anova(mod7)
Anova(mod8)
Anova(mod9)
Anova(mod10)
vP <- ggplot(virusPrevSum, aes(x=virus, y=mean, fill=ubo_binary_june)) +
theme_minimal(base_size = 20) +
theme(legend.position = "none") +
labs(x="Virus", y="Virus Prevalence", fill = "UBO Status:", tag = "A") +
geom_bar(stat="identity", position=position_dodge()) +
geom_errorbar(aes(ymin=lower, ymax=upper), width=.2,
position=position_dodge(.9)) +
scale_fill_manual(values = c("#5071A0", "#E77624")) +
scale_y_continuous(labels = scales::percent)+
scale_x_discrete(guide = guide_axis(angle = 45)) +
annotate("text", x = c(1:6), y = c(1.06, .9,.98,.88,1.05,1.06), label = c("ns", "*", "***", "ns", "***", "ns"), size = 6)
vP
# extract legend
leg <- ggplot(virusPrevSum, aes(x=virus, y=mean, fill=ubo_binary_june)) +
theme_minimal(base_size = 20) +
theme(legend.position = "top") +
labs(x="Virus", y="Virus Prevalence", fill = "UBO Status:", tag = "A") +
geom_bar(stat="identity", position=position_dodge()) +
geom_errorbar(aes(ymin=lower, ymax=upper), width=.2,
position=position_dodge(.9)) +
scale_fill_manual(values = c("#5071A0", "#E77624")) +
scale_y_continuous(labels = scales::percent)+
scale_x_discrete(guide = guide_axis(angle = 45))
# grouped boxplot
vld <- ggplot(data = virus_long, aes(x = virus, y = logLoad, fill = ubo_binary_june)) +
geom_boxplot() +
theme_minimal(base_size = 20) +
theme(legend.position = "none") +
labs(x="Virus", y="Log10(load) (copies/ul)", fill = "UBO Status:", tag = "B") +
scale_fill_manual(values = c("#5071A0", "#E77624")) +
scale_x_discrete(guide = guide_axis(angle = 45))
vld
# grouped boxplot
vld <- ggplot(data = virus_long, aes(x = virus, y = logLoad, fill = ubo_binary_june)) +
geom_boxplot() +
theme_minimal(base_size = 20) +
theme(legend.position = "none") +
labs(x="Virus", y="Log10(load) (copies/ul)", fill = "UBO Status:", tag = "B") +
scale_fill_manual(values = c("#5071A0", "#E77624")) +
scale_x_discrete(guide = guide_axis(angle = 45))+
annotate("text", x = c(1:6), y = c(9, 8,10,9,8,8), label = c("ns", "*", "***", "ns", "***", "ns"), size = 6)
vld
# grouped boxplot
vld <- ggplot(data = virus_long, aes(x = virus, y = logLoad, fill = ubo_binary_june)) +
geom_boxplot() +
theme_minimal(base_size = 20) +
theme(legend.position = "none") +
labs(x="Virus", y="Log10(load) (copies/ul)", fill = "UBO Status:", tag = "B") +
scale_fill_manual(values = c("#5071A0", "#E77624")) +
scale_x_discrete(guide = guide_axis(angle = 45))+
annotate("text", x = c(1:6), y = c(9.5, 8,10,9,86,84), label = c("ns", "*", "***", "ns", "***", "ns"), size = 6)
vld
# grouped boxplot
vld <- ggplot(data = virus_long, aes(x = virus, y = logLoad, fill = ubo_binary_june)) +
geom_boxplot() +
theme_minimal(base_size = 20) +
theme(legend.position = "none") +
labs(x="Virus", y="Log10(load) (copies/ul)", fill = "UBO Status:", tag = "B") +
scale_fill_manual(values = c("#5071A0", "#E77624")) +
scale_x_discrete(guide = guide_axis(angle = 45))+
annotate("text", x = c(1:6), y = c(9.5, 8,10,9,86,8.4), label = c("ns", "*", "***", "ns", "***", "ns"), size = 6)
vld
# grouped boxplot
vld <- ggplot(data = virus_long, aes(x = virus, y = logLoad, fill = ubo_binary_june)) +
geom_boxplot() +
theme_minimal(base_size = 20) +
theme(legend.position = "none") +
labs(x="Virus", y="Log10(load) (copies/ul)", fill = "UBO Status:", tag = "B") +
scale_fill_manual(values = c("#5071A0", "#E77624")) +
scale_x_discrete(guide = guide_axis(angle = 45))+
annotate("text", x = c(1:6), y = c(9.5, 8,10,9,8.6,8.4), label = c("ns", "*", "***", "ns", "***", "ns"), size = 6)
vld
# grouped boxplot
vld <- ggplot(data = virus_long, aes(x = virus, y = logLoad, fill = ubo_binary_june)) +
geom_boxplot() +
theme_minimal(base_size = 20) +
theme(legend.position = "none") +
labs(x="Virus", y="Log10(load) (copies/ul)", fill = "UBO Status:", tag = "B") +
scale_fill_manual(values = c("#5071A0", "#E77624")) +
scale_x_discrete(guide = guide_axis(angle = 45))+
annotate("text", x = c(1:6), y = c(9.6, 8,10,9,8.7,8.4), label = c("ns", "*", "***", "ns", "***", "ns"), size = 6)
vld
# VIRUS LOAD - UBO BINARY
mod12 <- lm(data = splitVirus$BQCV, logLoad ~ June.UBO)
mod13 <- lm(data = splitVirus$DWV.A, logLoad ~ June.UBO)
mod14 <- lm(data = splitVirus$DWV.B, logLoad ~ June.UBO)
mod15 <- lm(data = splitVirus$IAPV, logLoad ~ June.UBO)
mod16 <- lm(data = splitVirus$LSV, logLoad ~ June.UBO)
mod17 <- lm(data = splitVirus$SBV, logLoad ~ June.UBO)
# VIRUS LOAD - UBO BINARY
mod12 <- lm(data = splitVirus$BQCV, logLoad ~ June.UBO)
mod13 <- lm(data = splitVirus$DWV.A, logLoad ~ June.UBO)
mod14 <- lm(data = splitVirus$DWV.B, logLoad ~ June.UBO)
mod15 <- lm(data = splitVirus$IAPV, logLoad ~ June.UBO)
mod16 <- lm(data = splitVirus$LSV, logLoad ~ June.UBO)
mod17 <- lm(data = splitVirus$SBV, logLoad ~ June.UBO)
Anova(mod12)
Anova(mod13)
Anova(mod12)
Anova(mod13)
Anova(mod14)
Anova(mod15)
mod16 <- lm(data = splitVirus$LSV, logLoad ~ June.UBO)
mod17 <- lm(data = splitVirus$SBV, logLoad ~ June.UBO)
Anova(mod16)
Anova(mod17)
# get legend
grobs <- ggplotGrob(leg)$grobs
legend <- grobs[[which(sapply(grobs, function(x) x$name) == "guide-box")]]
# plot figures
plt <- grid.arrange(vP, vld, ncol=2)
plot_grid(legend, plt, nrow = 2, rel_heights = c(.1, 1))
