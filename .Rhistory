UBO_chalk_binary <- ds_long %>% # operate on the dataframe (ds_2021) and assign to new object (pltN)
group_by(chalk_type, UBO_binary) %>% # pick variables to group by
summarise(
mean = mean(chalk_binary, na.rm=T), # mean
n = length(chalk_binary),
a = sum(chalk_binary, na.rm = T)+1,
b = n - a + 1,
lower = qbeta(.025, shape1 = a, shape2 = b),
upper = qbeta(.975, shape1 = a, shape2 = b),
)
# ubo and chalk CONTINUOUS
UBO_chalk_brood <- ds_long %>% # operate on the dataframe (ds_2021) and assign to new object (pltN)
group_by(chalk_type, UBO_binary) %>% # pick variables to group by
summarise(
mean = mean(chalkbrood, na.rm=T), # mean
n = length(chalkbrood),
)
# model for binary chalk by ubo score
mod <- glm(data = ds_long, chalk_binary ~ Percentage_UBO * chalk_type, binomial(link = "logit"))
Anova(mod)
summary(mod)
# plot chalk brood binary
ggplot(ds_long, aes(x=Percentage_UBO, y=chalk_binary, color=as.character(chalk_type))) +
geom_smooth(method="glm", se=FALSE, fullrange=TRUE, size = 2, method.args = list(family=binomial)) +
geom_point(size=4) +
ylab("Chalkbrood Binary") + # y axis label
xlab("Percent UBO Response") + # x axis label
theme_minimal(base_size = 20) + # size of the text and label ticks
theme(legend.position = "none") +
scale_color_manual(values = c("#519E9A", "#9E519F"), name=" ")  # color pallets option = A-H
# plot chalk brood
ggplot(ds_short, aes(x=Percentage_UBO, y=percent_chalk)) +
#geom_point(size=0) +
geom_smooth(method="lm", se=FALSE, fullrange=TRUE, size = 2, color = c("#E77624")) +
geom_point(size=2.8) +
ylab("% frames with chalkbrood") + # y axis label
xlab("Percent UBO Response") + # x axis label
theme_minimal(base_size = 20) + # size of the text and label ticks
theme(legend.position = c(.76, .9))
# model for percentage ubo on frames
mod <- lm(data = ds_short, percent_chalk ~ Percentage_UBO)
Anova(mod)
summary(mod)
# CHALKBROOD CELLS BY UBO SCORE
####################################################################################################
# plot chalk brood
ds_long$uboScore <- ds_long$Percentage_UBO/100
ds_long$logChalk <- log10(ds_long$chalkbrood+1)
bot <- ggplot(ds_long, aes(x=uboScore, y = (chalkbrood),
linetype=as.character(chalk_type), shape = as.character(chalk_type))) +
geom_point(size=6) +
ylab(" ") + # y axis label
xlab(" ") + # x axis label
theme_bw(base_size = 20) + # size of the text and label ticks
theme(legend.position = "none") + # place the legend at the top
coord_cartesian(xlim = c(0, .5), ylim = c(0, 50)) +
scale_linetype_manual(values = c(1, 3), name=" ", guide = FALSE) + # color pallets option = A-H
scale_shape_manual(values = c(20, 1), name=" ") +
guides(color = guide_legend(override.aes = list(label = ''))) +
annotate("segment", x = 0, xend = (0.8833005), y = 5.374, yend = 0,
colour = "darkturquoise", size = 1.2, linetype=1) +
scale_x_continuous(labels = scales::percent) +
geom_smooth(method="lm", se=F, fullrange=TRUE, size = 2, color = "black")
# calculate average slope
x <- lm(data = ds_long, chalkbrood ~ uboScore)
summary(x)
top <- ggplot(ds_long, aes(x=uboScore, y = (chalkbrood),
linetype=as.character(chalk_type), shape = as.character(chalk_type))) +
geom_point(size=6) +
theme_bw(base_size = 20) + # size of the text and label ticks
theme(legend.position = c(.75, .5),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
panel.border = element_rect(colour = "black", fill=NA),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black")) +
coord_cartesian(xlim = c(0, .5)) +
ylab(" ") + # y axis label
scale_linetype_manual(values = c(1, 3), name=NULL, guide = FALSE) + # color pallets option = A-H
scale_shape_manual(values = c(20, 1), name=NULL) +
guides(color = guide_legend(override.aes = list(label = ''))) +
scale_y_continuous(limits = c(150, 200), breaks = seq(150, 200, by = 25))
top
plt <- plot_grid(top, bot, ncol = 1, rel_heights = c(.30, 1), align = "v")
plot_grid(plt + draw_label("UBeeO Score", x=0.55, y=  0, vjust=-.8, angle= 0, size = 20) +
draw_label("Chalkbrood (cells/colony)", x=  0, y=0.55, vjust= 1.5, angle=90, size = 20))
# calculate average slope
x <- lm(data = ds_long, chalkbrood ~ uboScore)
summary(x)
xdf <- ds_long[ds_long$chalk_type == "White Chalk",]
ggplot(xdf, aes(x=uboScore, y = logChalk)) +
geom_point(size=6) +
ylab("Chalkbrood (cells/frame)") + # y axis label
xlab("UBeeO Score") + # x axis label
theme_minimal(base_size = 20) + # size of the text and label ticks
theme(legend.position = c(.75, .9)) + # place the legend at the top
coord_cartesian(xlim = c(0, .5)) +
guides(color = guide_legend(override.aes = list(label = ''))) +
#  annotate("segment", x = 0, xend = (229.2726/100), y = 2.239076, yend = 0,
#           colour = "darkturquoise", size = 1.2, linetype=1) +
scale_x_continuous(labels = scales::percent) +
#  scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
#                labels = trans_format("log10", math_format(10^.x))) +
geom_smooth(method="loess", se=F, fullrange=TRUE, size = 2, color = "black")
# glm for chalkbrood count data by ubo score and chalk type (poisson)\
ds_long$chalk_type <- factor(ds_long$chalk_type, levels = c("White Chalk", "Black Chalk Spores"))
ds_long$ID <- as.character(ds_long$Test_No)
# CHALKBROOD MODEL
mod <- glm(data = ds_long, chalkbrood ~ Percentage_UBO * chalk_type, family = poisson(link = "log"))
Anova(mod)
summary(mod)
# CHALKBROOD MODEL
mod <- glm(data = ds_long, chalkbrood ~ Percentage_UBO * chalk_type, family = poisson(link = "log"))
Anova(mod)
# model for binary chalk by ubo score
mod <- glm(data = ds_long, chalk_binary ~ Percentage_UBO * chalk_type, binomial(link = "logit"))
Anova(mod)
summary(mod)
# plot chalk brood binary
ggplot(ds_long, aes(x=Percentage_UBO, y=chalk_binary, color=as.character(chalk_type))) +
geom_smooth(method="glm", se=FALSE, fullrange=TRUE, size = 2, method.args = list(family=binomial)) +
geom_point(size=4) +
ylab("Chalkbrood Binary") + # y axis label
xlab("Percent UBO Response") + # x axis label
theme_minimal(base_size = 20) + # size of the text and label ticks
theme(legend.position = "none") +
scale_color_manual(values = c("#519E9A", "#9E519F"), name=" ")  # color pallets option = A-H
# model for binary chalk by ubo score
mod <- glm(data = ds_long, chalk_binary ~ Percentage_UBO * chalk_type, binomial(link = "logit"))
Anova(mod)
summary(mod)
# plot chalk brood binary
ggplot(ds_long, aes(x=Percentage_UBO, y=chalk_binary, color=as.character(chalk_type))) +
geom_smooth(method="glm", se=FALSE, fullrange=TRUE, size = 2, method.args = list(family=binomial)) +
geom_point(size=4) +
ylab("Chalkbrood Binary") + # y axis label
xlab("Percent UBO Response") + # x axis label
theme_minimal(base_size = 20) + # size of the text and label ticks
theme(legend.position = "none") +
scale_color_manual(values = c("#519E9A", "#9E519F"), name=" ")  # color pallets option = A-H
# plot chalk brood
ggplot(ds_short, aes(x=Percentage_UBO, y=percent_chalk)) +
#geom_point(size=0) +
geom_smooth(method="lm", se=FALSE, fullrange=TRUE, size = 2, color = c("#E77624")) +
geom_point(size=2.8) +
ylab("% frames with chalkbrood") + # y axis label
xlab("Percent UBO Response") + # x axis label
theme_minimal(base_size = 20) + # size of the text and label ticks
theme(legend.position = c(.76, .9))
# model for percentage ubo on frames
mod <- lm(data = ds_short, percent_chalk ~ Percentage_UBO)
Anova(mod)
summary(mod)
# CHALKBROOD CELLS BY UBO SCORE
####################################################################################################
# plot chalk brood
ds_long$uboScore <- ds_long$Percentage_UBO/100
ds_long$logChalk <- log10(ds_long$chalkbrood+1)
bot <- ggplot(ds_long, aes(x=uboScore, y = (chalkbrood),
linetype=as.character(chalk_type), shape = as.character(chalk_type))) +
geom_point(size=6) +
ylab(" ") + # y axis label
xlab(" ") + # x axis label
theme_bw(base_size = 20) + # size of the text and label ticks
theme(legend.position = "none") + # place the legend at the top
coord_cartesian(xlim = c(0, .5), ylim = c(0, 50)) +
scale_linetype_manual(values = c(1, 3), name=" ", guide = FALSE) + # color pallets option = A-H
scale_shape_manual(values = c(20, 1), name=" ") +
guides(color = guide_legend(override.aes = list(label = ''))) +
annotate("segment", x = 0, xend = (0.8833005), y = 5.374, yend = 0,
colour = "darkturquoise", size = 1.2, linetype=1) +
scale_x_continuous(labels = scales::percent) +
geom_smooth(method="lm", se=F, fullrange=TRUE, size = 2, color = "black")
# calculate average slope
x <- lm(data = ds_long, chalkbrood ~ uboScore)
summary(x)
top <- ggplot(ds_long, aes(x=uboScore, y = (chalkbrood),
linetype=as.character(chalk_type), shape = as.character(chalk_type))) +
geom_point(size=6) +
theme_bw(base_size = 20) + # size of the text and label ticks
theme(legend.position = c(.75, .5),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
panel.border = element_rect(colour = "black", fill=NA),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black")) +
coord_cartesian(xlim = c(0, .5)) +
ylab(" ") + # y axis label
scale_linetype_manual(values = c(1, 3), name=NULL, guide = FALSE) + # color pallets option = A-H
scale_shape_manual(values = c(20, 1), name=NULL) +
guides(color = guide_legend(override.aes = list(label = ''))) +
scale_y_continuous(limits = c(150, 200), breaks = seq(150, 200, by = 25))
top
plt <- plot_grid(top, bot, ncol = 1, rel_heights = c(.30, 1), align = "v")
plot_grid(plt + draw_label("UBeeO Score", x=0.55, y=  0, vjust=-.8, angle= 0, size = 20) +
draw_label("Chalkbrood (cells/colony)", x=  0, y=0.55, vjust= 1.5, angle=90, size = 20))
# calculate average slope
x <- lm(data = ds_long, chalkbrood ~ uboScore)
summary(x)
xdf <- ds_long[ds_long$chalk_type == "White Chalk",]
ggplot(xdf, aes(x=uboScore, y = logChalk)) +
geom_point(size=6) +
ylab("Chalkbrood (cells/frame)") + # y axis label
xlab("UBeeO Score") + # x axis label
theme_minimal(base_size = 20) + # size of the text and label ticks
theme(legend.position = c(.75, .9)) + # place the legend at the top
coord_cartesian(xlim = c(0, .5)) +
guides(color = guide_legend(override.aes = list(label = ''))) +
#  annotate("segment", x = 0, xend = (229.2726/100), y = 2.239076, yend = 0,
#           colour = "darkturquoise", size = 1.2, linetype=1) +
scale_x_continuous(labels = scales::percent) +
#  scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
#                labels = trans_format("log10", math_format(10^.x))) +
geom_smooth(method="loess", se=F, fullrange=TRUE, size = 2, color = "black")
# glm for chalkbrood count data by ubo score and chalk type (poisson)\
ds_long$chalk_type <- factor(ds_long$chalk_type, levels = c("White Chalk", "Black Chalk Spores"))
ds_long$ID <- as.character(ds_long$Test_No)
# CHALKBROOD MODEL
mod <- glm(data = ds_long, chalkbrood ~ Percentage_UBO * chalk_type, family = poisson(link = "log"))
Anova(mod)
summary(mod)
# plot chalk brood
ggplot(ds_short, aes(x=Percentage_UBO, y=percent_chalk)) +
#geom_point(size=0) +
geom_smooth(method="lm", se=FALSE, fullrange=TRUE, size = 2, color = c("#E77624")) +
geom_point(size=2.8) +
ylab("% frames with chalkbrood") + # y axis label
xlab("Percent UBO Response") + # x axis label
theme_minimal(base_size = 20) + # size of the text and label ticks
theme(legend.position = c(.76, .9))
# plot chalk brood binary
ggplot(ds_long, aes(x=Percentage_UBO, y=chalk_binary, color=as.character(chalk_type))) +
geom_smooth(method="glm", se=FALSE, fullrange=TRUE, size = 2, method.args = list(family=binomial)) +
geom_point(size=4) +
ylab("Chalkbrood Binary") + # y axis label
xlab("Percent UBO Response") + # x axis label
theme_minimal(base_size = 20) + # size of the text and label ticks
theme(legend.position = "none") +
scale_color_manual(values = c("#519E9A", "#9E519F"), name=" ")  # color pallets option = A-H
ds_long$UBO_binary
chi.square(ds_long$UBO_binary ~ ds_long$chalk_binary)
chisq.test(ds_long$UBO_binary ~ ds_long$chalk_binary)
glm(ds_long$chalk_binary ~ ds_long$UBO_binary, family = binomial(link = "logit"))
mod <- glm(ds_long$chalk_binary ~ ds_long$UBO_binary, family = binomial(link = "logit"))
Anova(mod)
# Chalkbrood prevalence
# ubo and chalk CONTINUOUS
sum <- ds_long %>% # operate on the dataframe (ds_2021) and assign to new object (pltN)
group_by(chalk_type, UBO_binary) %>% # pick variables to group by
summarise(
mean = mean(chalk_binary, na.rm=T), # mean
n = length(chalk_binary),
)
sum
mod <- glm(data = ds_long, chalk_binary ~ UBO_binary * chalk_type, family = binomial(link = "logit"))
Anova(mod)
fisher.test(ds_long$chalk_binary ~ ds_long$UBO_binary)
fisher.test(y = ds_long$chalk_binary, x = ds_long$UBO_binary)
ds_long[ds_long$chalk_type == "Black Chalk Spores",]
mod <- glm(data = ds_long[ds_long$chalk_type == "Black Chalk Spores",], chalk_binary ~ UBO_binary, family = binomial(link = "logit"))
Anova(mod)
# Chalkbrood prevalence
# ubo and chalk CONTINUOUS
sum <- ds_long %>% # operate on the dataframe (ds_2021) and assign to new object (pltN)
group_by(UBO_binary) %>% # pick variables to group by
summarise(
mean = mean(chalk_binary, na.rm=T), # mean
n = length(chalk_binary),
)
sum
# Chalkbrood prevalence
# ubo and chalk CONTINUOUS
sum <- ds_long %>% # operate on the dataframe (ds_2021) and assign to new object (pltN)
group_by() %>% # pick variables to group by
summarise(
mean = mean(chalk_binary, na.rm=T), # mean
n = length(chalk_binary),
)
sum
# Chalkbrood prevalence
# ubo and chalk CONTINUOUS
sum <- ds_long %>% # operate on the dataframe (ds_2021) and assign to new object (pltN)
group_by(UBO_binary) %>% # pick variables to group by
summarise(
mean = mean(chalk_binary, na.rm=T), # mean
n = length(chalk_binary),
)
sum
# Chalkbrood prevalence
# ubo and chalk CONTINUOUS
sum <- ds_long %>% # operate on the dataframe (ds_2021) and assign to new object (pltN)
group_by(UBO_binary, chalk_type) %>% # pick variables to group by
summarise(
mean = mean(chalk_binary, na.rm=T), # mean
n = length(chalk_binary),
)
sum
Anova(mod)
mod <- glm(data = ds_long, chalk_binary ~ UBO_binary * chalk_type, family = binomial(link = "logit"))
Anova(mod)
# CHALKBROOD CELLS BY UBO SCORE
####################################################################################################
# plot chalk brood
ds_long$uboScore <- ds_long$Percentage_UBO/100
ds_long$logChalk <- log10(ds_long$chalkbrood+1)
bot <- ggplot(ds_long, aes(x=uboScore, y = (chalkbrood),
linetype=as.character(chalk_type), shape = as.character(chalk_type))) +
geom_point(size=6) +
ylab(" ") + # y axis label
xlab(" ") + # x axis label
theme_bw(base_size = 20) + # size of the text and label ticks
theme(legend.position = "none") + # place the legend at the top
coord_cartesian(xlim = c(0, .5), ylim = c(0, 50)) +
scale_linetype_manual(values = c(1, 3), name=" ", guide = FALSE) + # color pallets option = A-H
scale_shape_manual(values = c(20, 1), name=" ") +
guides(color = guide_legend(override.aes = list(label = ''))) +
annotate("segment", x = 0, xend = (0.8833005), y = 5.374, yend = 0,
colour = "darkturquoise", size = 1.2, linetype=1) +
scale_x_continuous(labels = scales::percent) +
geom_smooth(method="lm", se=F, fullrange=TRUE, size = 2, color = "black")
# calculate average slope
x <- lm(data = ds_long, chalkbrood ~ uboScore)
summary(x)
top <- ggplot(ds_long, aes(x=uboScore, y = (chalkbrood),
linetype=as.character(chalk_type), shape = as.character(chalk_type))) +
geom_point(size=6) +
theme_bw(base_size = 20) + # size of the text and label ticks
theme(legend.position = c(.75, .5),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
panel.border = element_rect(colour = "black", fill=NA),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black")) +
coord_cartesian(xlim = c(0, .5)) +
ylab(" ") + # y axis label
scale_linetype_manual(values = c(1, 3), name=NULL, guide = FALSE) + # color pallets option = A-H
scale_shape_manual(values = c(20, 1), name=NULL) +
guides(color = guide_legend(override.aes = list(label = ''))) +
scale_y_continuous(limits = c(150, 200), breaks = seq(150, 200, by = 25))
top
plt <- plot_grid(top, bot, ncol = 1, rel_heights = c(.30, 1), align = "v")
plot_grid(plt + draw_label("UBeeO Score", x=0.55, y=  0, vjust=-.8, angle= 0, size = 20) +
draw_label("Chalkbrood (cells/colony)", x=  0, y=0.55, vjust= 1.5, angle=90, size = 20))
# calculate average slope
x <- lm(data = ds_long, chalkbrood ~ uboScore)
summary(x)
xdf <- ds_long[ds_long$chalk_type == "White Chalk",]
ggplot(xdf, aes(x=uboScore, y = logChalk)) +
geom_point(size=6) +
ylab("Chalkbrood (cells/frame)") + # y axis label
xlab("UBeeO Score") + # x axis label
theme_minimal(base_size = 20) + # size of the text and label ticks
theme(legend.position = c(.75, .9)) + # place the legend at the top
coord_cartesian(xlim = c(0, .5)) +
guides(color = guide_legend(override.aes = list(label = ''))) +
#  annotate("segment", x = 0, xend = (229.2726/100), y = 2.239076, yend = 0,
#           colour = "darkturquoise", size = 1.2, linetype=1) +
scale_x_continuous(labels = scales::percent) +
#  scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
#                labels = trans_format("log10", math_format(10^.x))) +
geom_smooth(method="loess", se=F, fullrange=TRUE, size = 2, color = "black")
# glm for chalkbrood count data by ubo score and chalk type (poisson)\
ds_long$chalk_type <- factor(ds_long$chalk_type, levels = c("White Chalk", "Black Chalk Spores"))
ds_long$ID <- as.character(ds_long$Test_No)
# CHALKBROOD MODEL
mod <- glm(data = ds_long, chalkbrood ~ Percentage_UBO * chalk_type, family = poisson(link = "log"))
Anova(mod)
summary(mod)
ds_long$chalkbrood
mean(ds_long$chalkbrood)
Anova(mod)
# nosema summary
nosePrevSum <- cleanDS_22 %>% # operate on the dataframe (ds_2021) and assign to new object (pltN)
group_by(Month, UBO_binary) %>% # pick variables to group by
summarise(
mean = mean(Nosema_binary, na.rm=T), # mean
n = length(Nosema_binary),
a = sum(Nosema_binary, na.rm = T)+1,
b = n - a + 1,
lower = qbeta(.025, shape1 = a, shape2 = b),
upper = qbeta(.975, shape1 = a, shape2 = b),
)
nosePrevSum <- nosePrevSum[complete.cases(nosePrevSum),]
nosemaLoad_Sum <- cleanDS_22 %>% # operate on the dataframe (ds_2021) and assign to new object (pltN)
group_by(Month, UBO_binary) %>% # pick variables to group by
summarise(
mean = mean(((nosema_count*4000000)/80), na.rm=T), # mean\
n = length(((nosema_count*4000000)/80)),
sd = sd(((nosema_count*4000000)/80), na.rm = TRUE),
se = sd / sqrt(n)
)
nosemaLoad_Sum <- nosemaLoad_Sum[complete.cases(nosemaLoad_Sum),]
# add factor data and make ubo a char
nosePrevSum <- nosePrevSum[!is.na(nosePrevSum$UBO_binary),]
nosePrevSum$Month <- factor(nosePrevSum$Month, levels = c("June", "July", "August", "Sept."))
nosePrevSum$UBO_Char <- ifelse(nosePrevSum$UBO_binary==1, "UBO High", "UBO Low")
# plot prevalence
nosPrev <- ggplot(nosePrevSum, aes(x=Month, y=mean, group=UBO_Char)) +
geom_point(aes(color=UBO_Char), size=5)+
geom_line(aes(color=UBO_Char), size=1.5) +
theme_minimal(base_size = 20) +
theme(legend.position = "none") +
coord_cartesian(ylim = c(0, 1)) +
geom_errorbar(aes(ymin = lower, ymax = upper, width = 0.1, color=UBO_Char))+
labs(x="Sampling Month", y="Nosema Prevalence", color=" ", tag = "A") +
scale_color_manual(values = c("#5071A0", "#E77624")) +
scale_y_continuous(labels = scales::percent) +
scale_x_discrete(guide = guide_axis(angle = 45))
# add factor data and make ubo a char
nosemaLoad_Sum <- nosemaLoad_Sum[!is.na(nosemaLoad_Sum$UBO_binary),]
nosemaLoad_Sum$Month <- factor(nosemaLoad_Sum$Month, levels = c("June", "July", "August", "Sept."))
nosemaLoad_Sum$UBO_Char <- ifelse(nosemaLoad_Sum$UBO_binary==1, "UBeeO High", "UBeeO Low")
contNos <-ggplot(nosemaLoad_Sum, aes(x=Month, y=mean, group=UBO_Char)) +
geom_point(aes(color=UBO_Char), size=5) +
geom_line(aes(color=UBO_Char), size=1.5) +
theme_minimal(base_size = 20) +
theme(legend.position = "none") +
geom_errorbar(aes(ymin = mean-se, ymax = mean+se, width = 0.1 ,color=UBO_Char))+
labs(x="Sampling Date", y="Nosema Load (spores/bee)", color=" ", tag = "B") +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
scale_color_manual(values = c("#5071A0", "#E77624")) +
scale_x_discrete(guide = guide_axis(angle = 45))
leg <-ggplot(nosemaLoad_Sum, aes(x=Month, y=mean, group=UBO_Char)) +
geom_point(aes(color=UBO_Char), size=5) +
geom_line(aes(color=UBO_Char), size=1.5) +
theme_minimal(base_size = 20) +
theme(legend.position = "top") +
geom_errorbar(aes(ymin = mean-se, ymax = mean+se, width = 0.1 ,color=UBO_Char))+
labs(x="Sampling Date", y="Nosema Load (spores/bee)", color="UBeeO Status:", tag = "B") +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
scale_color_manual(values = c("#5071A0", "#E77624"))
# make a multi panel plot
# get legend
grobs <- ggplotGrob(leg)$grobs
legend <- grobs[[which(sapply(grobs, function(x) x$name) == "guide-box")]]
# plot figures
plt <- grid.arrange(nosPrev, contNos, ncol=2)
plot_grid(legend, plt, nrow = 2, rel_heights = c(.1, 1))
# prevalence model
mod2 <- glmer(data = cleanDS_22, Nosema_binary ~ UBO_binary * Month + (1 | yard), family = binomial(link="logit"))
Anova(mod2)
summary(mod2)
# load model
mod3 <- glmer(data = cleanDS_22, (1+nosema_count) ~ UBO_binary * Month + (1 | yard), family = Gamma(link="log"))
Anova(mod3)
summary(mod3)
# multcomp
cleanDS_22$inter <- interaction(cleanDS_22$UBO_binary, cleanDS_22$Month)
interMod <- glmer(data = cleanDS_22, (1+nosema_count) ~ inter + (1 | yard), family = Gamma(link="log"))
cht <- glht(interMod, linfct=mcp(inter = "Tukey"))
summary(cht, test = univariate())
# make blocking var
cleanDS_22$block <- paste0(cleanDS_22$beekeeper, "_", cleanDS_22$yard)
# make month a factor
cleanDS_22_noMonth <- cleanDS_22[!is.na(cleanDS_22$Month),]
cleanDS_22_noMonth$Month <- factor(cleanDS_22_noMonth$Month, levels = c("June", "July", "August", "Sept."))
ggplot(cleanDS_22_noMonth, aes(x=assay_score, y=((nosema_count*4000000)/80), color=Month, shape=Month)) +
geom_point(size=4) +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE, size = 1.9) +
theme_minimal(base_size = 20) +
theme(legend.position = c(.8,.8)) +
labs(x="UBeeO Score", y="Nosema Load (spores/bee)", color="Month") +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
scale_color_manual(values = c("#9E519F","#519E9A", "#5071A0", "#E77624"))
nosPos <- cleanDS_22_noMonth[cleanDS_22_noMonth$nosema_count>0, ]
# facet wrap version
ggplot(nosPos, aes(x=assay_score, y=1+((nosema_count*4000000)/80))) +
geom_point(size=4) +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE, size = 2, color = "#619B50") +
theme_minimal(base_size = 20) +
theme(legend.position = "none") +
labs(x="UBeeO Score", y="Nosema Load (spores/bee)", color="Month") +
scale_y_log10(
breaks = scales::trans_breaks("log10", function(x) 10^x, n = 2),
labels = scales::trans_format("log10", scales::math_format(10^.x))
) +
scale_x_continuous(labels = scales::percent)
# month as a covariate
y <- glmer(data = nosPos, nosema_count ~ assay_score * Month + (1| block), family = Gamma(link = "log"))
Anova(y)
summary(y)
# split month
nosemaSplit <- split(nosPos, nosPos$Month)
# regression for nosema
mod <- glmer(data = nosemaSplit$June, nosema_count+1 ~ assay_score + (1|block), family = Gamma(link = "log"))
mod1 <- glmer(data = nosemaSplit$July, nosema_count+1 ~ assay_score + (1|block), family = Gamma(link = "log"))
mod2 <- glmer(data = nosemaSplit$August, nosema_count+1 ~ assay_score + (1|block), family = Gamma(link = "log"))
mod3 <- glmer(data = nosemaSplit$Sept., nosema_count+1 ~ assay_score + (1|block), family = Gamma(link = "log"))
Anova(mod)
Anova(mod1)
Anova(mod2)
Anova(mod3)
Anova(y)
# nosema summary
nosePrevSum <- cleanDS_22 %>% # operate on the dataframe (ds_2021) and assign to new object (pltN)
group_by(Month, UBO_binary) %>% # pick variables to group by
summarise(
mean = mean(Nosema_binary, na.rm=T), # mean
n = length(Nosema_binary),
a = sum(Nosema_binary, na.rm = T)+1,
b = n - a + 1,
lower = qbeta(.025, shape1 = a, shape2 = b),
upper = qbeta(.975, shape1 = a, shape2 = b),
)
nosePrevSum <- nosePrevSum[complete.cases(nosePrevSum),]
nosePrevSum
